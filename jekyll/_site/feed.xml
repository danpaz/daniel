<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://danpaz.me/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://danpaz.me/blog/" rel="alternate" type="text/html" /><updated>2017-09-20T23:33:23-04:00</updated><id>http://danpaz.me/blog/</id><title type="html">danpaz on the internet</title><subtitle>Tech and sometimes-not-tech blog by Daniel Paz-Soldan, also known as danpaz on the web.
</subtitle><entry><title type="html">Hosting a Jekyll blog on GitHub pages in a subfolder</title><link href="http://danpaz.me/blog/jekyll/2017/09/20/jekyll-in-subfolder.html" rel="alternate" type="text/html" title="Hosting a Jekyll blog on GitHub pages in a subfolder" /><published>2017-09-20T00:00:00-04:00</published><updated>2017-09-20T00:00:00-04:00</updated><id>http://danpaz.me/blog/jekyll/2017/09/20/jekyll-in-subfolder</id><content type="html" xml:base="http://danpaz.me/blog/jekyll/2017/09/20/jekyll-in-subfolder.html">&lt;p&gt;&lt;strong&gt;TLDR: I commit the output of jekyll build and use a symbolic link to point
&lt;code class=&quot;highlighter-rouge&quot;&gt;/blog/&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;/jekyll/_site&lt;/code&gt;. Works great!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I recently set up this blog using Jekyll hosted on GitHub pages. It was a lovely
experience getting started and gave me exactly what I was looking for - a full
featured blog framework that gets out of my way and lets me just write.&lt;/p&gt;

&lt;p&gt;But there was one gotcha that almost made me abandon ship. I really wanted to
host the blog at danpaz.me/blog, while keeping the same splash page at danpaz.me
that I already have in place.&lt;/p&gt;

&lt;p&gt;I took the first step of adding the /blog baseurl in my jekyll configs.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
baseurl: &quot;/blog&quot; # the subpath of your site, e.g. /blog
...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then I saw this in the jekyll docs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/jekyll-source-files-root.png&quot; alt=&quot;Source Files Must be in the Root Directory&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GitHub Pages overrides the “Site Source” configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Meaning that in order for GitHub to properly build the jekyll site I would have
to keep all jekyll files at the root of the repo, and the site’s index.html
would be generated by the jekyll build. So I would lose my splash page! One
workaround is to &lt;a href=&quot;https://jekyllrb.com/docs/themes/#overriding-theme-defaults&quot;&gt;replace the jekyll theme’s index.html with my own&lt;/a&gt;, but
then I’d lose the nice blog post list the theme provides.&lt;/p&gt;

&lt;p&gt;Instead, I decided to commit the output of jekyll build in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site/&lt;/code&gt; directory.
But to make sure the blog is served at &lt;code class=&quot;highlighter-rouge&quot;&gt;danpaz.me/blog&lt;/code&gt; and not &lt;code class=&quot;highlighter-rouge&quot;&gt;danpaz.me/blog/_site/&lt;/code&gt;
the built files need to be in a &lt;code class=&quot;highlighter-rouge&quot;&gt;blog&lt;/code&gt; directory in my github repo. I considered
copying the built files into a &lt;code class=&quot;highlighter-rouge&quot;&gt;blog&lt;/code&gt; directory every time I build with jekyll,
but I decided to try using a &lt;a href=&quot;https://linux.die.net/man/1/ln&quot;&gt;symlink&lt;/a&gt; to avoid the manual copy step.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ln -sv jekyll/_site blog
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I wasn’t sure if GitHub would support symbolic links in this way, but turns out
it works fine!&lt;/p&gt;

&lt;p&gt;Now my workflow is to keep a terminal open with jekyll build watching to rebuild
the site:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd jekyll
$ jekyll build --watch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now I can add and edit posts to the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll/_posts/&lt;/code&gt; directory without thinking
about building the output. If I need to view my blog locally I instead use
&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Any thoughts on this approach? Get in touch and let me know!&lt;/p&gt;

&lt;p&gt;-D&lt;/p&gt;</content><author><name></name></author><summary type="html">TLDR: I commit the output of jekyll build and use a symbolic link to point /blog/ to /jekyll/_site. Works great!</summary></entry><entry><title type="html">Hey it’s danpaz on the internet!</title><link href="http://danpaz.me/blog/hello/2017/09/20/hello-world.html" rel="alternate" type="text/html" title="Hey it's danpaz on the internet!" /><published>2017-09-20T00:00:00-04:00</published><updated>2017-09-20T00:00:00-04:00</updated><id>http://danpaz.me/blog/hello/2017/09/20/hello-world</id><content type="html" xml:base="http://danpaz.me/blog/hello/2017/09/20/hello-world.html">&lt;p&gt;Here we go again! This must be my third time starting a blog :)&lt;/p&gt;

&lt;p&gt;I’m trying jekyll on github pages, but had to jump through some hoops to host it
on /blog while keeping the same homepage at danpaz.me. That’ll be the topic of
my first post!&lt;/p&gt;

&lt;p&gt;-D&lt;/p&gt;</content><author><name></name></author><summary type="html">Here we go again! This must be my third time starting a blog :)</summary></entry></feed>